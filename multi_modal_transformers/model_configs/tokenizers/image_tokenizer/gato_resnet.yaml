train_parallel: ${training.parallel_training}

# data preprocessing
image_size: [280, 280, 3]
patch_size: 56
normalize: True # normalizes the input image pixel values to range [-1, 1]
position_interval: 128 # number of discrete values for encoding patch positions
rng_collection: patch_encoding # pseudo-random number parameter name
embedding_dim: ${model.concept_learner.token_embedding_dim}

row_position_embedding:
  _target_: flax.linen.Embed
  name: "image_row_position_embedding"
  num_embeddings: ${model.concept_learner.image_tokenizer.position_interval}
  features: ${model.concept_learner.token_embedding_dim}
  dtype: ${model.dtype}
  param_dtype: ${model.param_dtype}
  embedding_init:
    _target_: flax.linen.initializers.variance_scaling
    scale: 1.0
    mode: "fan_in"
    distribution: "normal"
    dtype: ${model.dtype}

col_position_embedding:
  _target_: flax.linen.Embed
  name: "image_col_position_embedding"
  num_embeddings: ${model.concept_learner.image_tokenizer.position_interval}
  features: ${model.concept_learner.token_embedding_dim}
  dtype: ${model.dtype}
  param_dtype: ${model.param_dtype}
  embedding_init:
    _target_: flax.linen.initializers.variance_scaling
    scale: 1.0
    mode: "fan_in"
    distribution: "normal"
    dtype: ${model.dtype}

resnet:
      # how many resnet blocks
      num_blocks: 2

      # downsampling of input image
      input_projection:
        conv:
          _target_: flax.linen.Conv
          features: 64
          kernel_size: [12,12]
          strides: [2,2]
          padding: VALID
          use_bias: True
          dtype: ${model.dtype}
          param_dtype: ${model.param_dtype}
          kernel_init:
            _target_: flax.linen.initializers.he_normal
            dtype: ${model.param_dtype}
          bias_init:
            _target_: flax.linen.initializers.normal
            dtype: ${model.param_dtype}

        pool:
          _partial_: true
          _target_: flax.linen.max_pool
          window_shape: [3,3]
          strides: [1,1]
          padding: VALID

      # resnet blocks
      resnet_block:
        norm:
          _target_: flax.linen.GroupNorm
          num_groups: 32
          epsilon: 1e-6
          dtype: ${model.dtype}
          param_dtype: ${model.param_dtype}

        activation:
          _partial_: true
          _target_: flax.linen.gelu

        conv:
          _target_: flax.linen.Conv
          features: 64
          kernel_size: [3,3]
          strides: [1,1]
          padding: SAME
          use_bias: True
          dtype: ${model.dtype}
          param_dtype: ${model.param_dtype}
          kernel_init:
            _target_: flax.linen.initializers.he_normal
            dtype: ${model.param_dtype}
          bias_init:
            _target_: flax.linen.initializers.normal
            dtype: ${model.param_dtype}

      # convert feature maps to tokens
      output_projection:
        dense:
          _target_: flax.linen.Dense
          features: ${model.concept_learner.token_embedding_dim}
          kernel_init:
            _target_: flax.linen.initializers.he_normal
            dtype: ${model.param_dtype}
          bias_init:
            _target_: flax.linen.initializers.normal
            dtype: ${model.param_dtype}
